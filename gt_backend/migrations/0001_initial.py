# Generated by Django 5.2.1 on 2025-05-28 10:09

import ckeditor.fields
import django.utils.timezone
import gt_backend.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typeStudy', models.CharField(choices=[('doctoral', 'Doctoral'), ('undergraduate', 'Undergraduate'), ('graduate', 'Graduate'), ('program', 'Program'), ('certification', 'Certification')], default='graduate', help_text='Please choose the type of study.', max_length=15, verbose_name='Type of Study')),
                ('typeStudy_en', models.CharField(choices=[('doctoral', 'Doctoral'), ('undergraduate', 'Undergraduate'), ('graduate', 'Graduate'), ('program', 'Program'), ('certification', 'Certification')], default='graduate', help_text='Please choose the type of study.', max_length=15, null=True, verbose_name='Type of Study')),
                ('typeStudy_ru', models.CharField(choices=[('doctoral', 'Doctoral'), ('undergraduate', 'Undergraduate'), ('graduate', 'Graduate'), ('program', 'Program'), ('certification', 'Certification')], default='graduate', help_text='Please choose the type of study.', max_length=15, null=True, verbose_name='Type of Study')),
                ('typeStudy_uz', models.CharField(choices=[('doctoral', 'Doctoral'), ('undergraduate', 'Undergraduate'), ('graduate', 'Graduate'), ('program', 'Program'), ('certification', 'Certification')], default='graduate', help_text='Please choose the type of study.', max_length=15, null=True, verbose_name='Type of Study')),
                ('nameEducation', models.CharField(default='nameEducation', help_text='Please enter the name of the education.', max_length=40, verbose_name='Education Name')),
                ('nameEducation_en', models.CharField(default='nameEducation', help_text='Please enter the name of the education.', max_length=40, null=True, verbose_name='Education Name')),
                ('nameEducation_ru', models.CharField(default='nameEducation', help_text='Please enter the name of the education.', max_length=40, null=True, verbose_name='Education Name')),
                ('nameEducation_uz', models.CharField(default='nameEducation', help_text='Please enter the name of the education.', max_length=40, null=True, verbose_name='Education Name')),
                ('detailEducation', models.CharField(default='detailEducation', help_text='Please enter the detail of the education.', max_length=80, verbose_name='Education Detail')),
                ('detailEducation_en', models.CharField(default='detailEducation', help_text='Please enter the detail of the education.', max_length=80, null=True, verbose_name='Education Detail')),
                ('detailEducation_ru', models.CharField(default='detailEducation', help_text='Please enter the detail of the education.', max_length=80, null=True, verbose_name='Education Detail')),
                ('detailEducation_uz', models.CharField(default='detailEducation', help_text='Please enter the detail of the education.', max_length=80, null=True, verbose_name='Education Detail')),
                ('duration', models.CharField(default='duration', help_text='Please enter the duration of the education.', max_length=20, verbose_name='Duration')),
                ('duration_en', models.CharField(default='duration', help_text='Please enter the duration of the education.', max_length=20, null=True, verbose_name='Duration')),
                ('duration_ru', models.CharField(default='duration', help_text='Please enter the duration of the education.', max_length=20, null=True, verbose_name='Duration')),
                ('duration_uz', models.CharField(default='duration', help_text='Please enter the duration of the education.', max_length=20, null=True, verbose_name='Duration')),
                ('certification', models.CharField(default='certification', help_text='Please enter the certification of the education.', max_length=30, verbose_name='Certification')),
                ('certification_en', models.CharField(default='certification', help_text='Please enter the certification of the education.', max_length=30, null=True, verbose_name='Certification')),
                ('certification_ru', models.CharField(default='certification', help_text='Please enter the certification of the education.', max_length=30, null=True, verbose_name='Certification')),
                ('certification_uz', models.CharField(default='certification', help_text='Please enter the certification of the education.', max_length=30, null=True, verbose_name='Certification')),
                ('startPeriod', models.CharField(default='startPeriod', help_text='Please enter the start period of the education.', max_length=30, verbose_name='Start of Period')),
                ('startPeriod_en', models.CharField(default='startPeriod', help_text='Please enter the start period of the education.', max_length=30, null=True, verbose_name='Start of Period')),
                ('startPeriod_ru', models.CharField(default='startPeriod', help_text='Please enter the start period of the education.', max_length=30, null=True, verbose_name='Start of Period')),
                ('startPeriod_uz', models.CharField(default='startPeriod', help_text='Please enter the start period of the education.', max_length=30, null=True, verbose_name='Start of Period')),
                ('link', models.FileField(default='/', help_text='Please enter the link of the academic program.', upload_to='academicProgram/', verbose_name="Academic Program's file")),
                ('iconType', models.CharField(default='bi-bounding-box-circles', help_text='Please choose the type of icon bi bi', max_length=40, verbose_name='icon bi')),
                ('colorType', models.CharField(blank=True, choices=[('doctoral', 'doctoral'), ('undergraduate', 'undergraduate'), ('graduate', 'graduate'), ('program', 'program'), ('certification', 'certification')], default='program', help_text='Please choose the type of color.', max_length=15, null=True, verbose_name='Color Type')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Academic Program',
                'verbose_name_plural': 'Academic Programs',
            },
        ),
        migrations.CreateModel(
            name='admissionDeadline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semesterName', models.CharField(default='semester dealine', help_text='Please enter the semester name.', max_length=50, verbose_name='semester name')),
                ('semesterName_en', models.CharField(default='semester dealine', help_text='Please enter the semester name.', max_length=50, null=True, verbose_name='semester name')),
                ('semesterName_ru', models.CharField(default='semester dealine', help_text='Please enter the semester name.', max_length=50, null=True, verbose_name='semester name')),
                ('semesterName_uz', models.CharField(default='semester dealine', help_text='Please enter the semester name.', max_length=50, null=True, verbose_name='semester name')),
                ('semesterDate', models.DateField(help_text='Please enter the semester date.', verbose_name='semester date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Admission Deadline',
                'verbose_name_plural': 'Admission Deadlines',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_name', models.CharField(help_text='Please, fill your full name.', max_length=50, validators=[gt_backend.validators.validateFullNname], verbose_name='full name')),
                ('email', models.EmailField(help_text='Please, fill your email.', max_length=254, verbose_name='email')),
                ('subject', models.CharField(blank=True, help_text='Please, fill the subject.', max_length=50, null=True, verbose_name='subject')),
                ('message', models.TextField(blank=True, help_text='Please, fill the message.', null=True, verbose_name='message')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
            },
        ),
        migrations.CreateModel(
            name='Infrastructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inf_img', models.ImageField(help_text='Please upload your image !', upload_to='infrostructure/', verbose_name='infrostructure image')),
                ('inf_header', models.CharField(default='header', help_text='Please, enter the header.', max_length=100, verbose_name='infrostructure header')),
                ('inf_header_en', models.CharField(default='header', help_text='Please, enter the header.', max_length=100, null=True, verbose_name='infrostructure header')),
                ('inf_header_ru', models.CharField(default='header', help_text='Please, enter the header.', max_length=100, null=True, verbose_name='infrostructure header')),
                ('inf_header_uz', models.CharField(default='header', help_text='Please, enter the header.', max_length=100, null=True, verbose_name='infrostructure header')),
                ('inf_paragraph', ckeditor.fields.RichTextField(default='paragraph', help_text='Please, enter the paragraph.', verbose_name='infrostructure paragraph')),
                ('inf_paragraph_en', ckeditor.fields.RichTextField(default='paragraph', help_text='Please, enter the paragraph.', null=True, verbose_name='infrostructure paragraph')),
                ('inf_paragraph_ru', ckeditor.fields.RichTextField(default='paragraph', help_text='Please, enter the paragraph.', null=True, verbose_name='infrostructure paragraph')),
                ('inf_paragraph_uz', ckeditor.fields.RichTextField(default='paragraph', help_text='Please, enter the paragraph.', null=True, verbose_name='infrostructure paragraph')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Infrastructure',
                'verbose_name_plural': 'Infrastructures',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n_header', models.CharField(default='header', help_text='Please enter the header of the news !', max_length=120, verbose_name='news header')),
                ('n_header_en', models.CharField(default='header', help_text='Please enter the header of the news !', max_length=120, null=True, verbose_name='news header')),
                ('n_header_ru', models.CharField(default='header', help_text='Please enter the header of the news !', max_length=120, null=True, verbose_name='news header')),
                ('n_header_uz', models.CharField(default='header', help_text='Please enter the header of the news !', max_length=120, null=True, verbose_name='news header')),
                ('n_paragraph', ckeditor.fields.RichTextField(default='paragraph', help_text='Please enter the paragraph of the news !', verbose_name='news paragraph')),
                ('n_paragraph_en', ckeditor.fields.RichTextField(default='paragraph', help_text='Please enter the paragraph of the news !', null=True, verbose_name='news paragraph')),
                ('n_paragraph_ru', ckeditor.fields.RichTextField(default='paragraph', help_text='Please enter the paragraph of the news !', null=True, verbose_name='news paragraph')),
                ('n_paragraph_uz', ckeditor.fields.RichTextField(default='paragraph', help_text='Please enter the paragraph of the news !', null=True, verbose_name='news paragraph')),
                ('n_date', models.DateField(default=django.utils.timezone.now, help_text='Please enter the date of the news !.', verbose_name='news date')),
                ('slug', models.SlugField(blank=True, max_length=120, unique=True)),
                ('n_view_counter', models.PositiveIntegerField(default=0, help_text="This is newses view counter don't change it!", verbose_name='news view counter')),
                ('n_news_img', models.ImageField(help_text='Please upload your image !', upload_to='news/', verbose_name='news image')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'News',
                'verbose_name_plural': 'News',
            },
        ),
        migrations.CreateModel(
            name='partnerUniversity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nation', models.CharField(help_text='Please enter the nation of the university.', max_length=50, verbose_name='nation')),
                ('universityName', models.CharField(help_text='Please enter the name of the university.', max_length=255, verbose_name='university name')),
                ('universityLink', models.CharField(default='', help_text='Please enter the link of the university.', max_length=255, verbose_name='university link')),
                ('universityDate', models.DateField(help_text='Please enter the date of the university.', verbose_name='university date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Partner University',
                'verbose_name_plural': 'Partner Universities',
            },
        ),
        migrations.CreateModel(
            name='TelegramData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_id', models.IntegerField(help_text='Please enter the Telegram ID.', verbose_name='Telegram ID')),
                ('bot_token', models.CharField(help_text='Please enter the Telegram Bot token.', max_length=46, verbose_name='Telegram Bot')),
            ],
            options={
                'verbose_name': 'TelegramData',
                'verbose_name_plural': 'TelegramData',
            },
        ),
    ]
